/*
 * This file is generated by jOOQ.
 */
package com.github.rinotc.springrestsample.infra.generated.jooq;


import com.github.rinotc.springrestsample.infra.generated.jooq.tables.AuthInfos;
import com.github.rinotc.springrestsample.infra.generated.jooq.tables.BoundedContexts;
import com.github.rinotc.springrestsample.infra.generated.jooq.tables.DomainModels;
import com.github.rinotc.springrestsample.infra.generated.jooq.tables.Users;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Public extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public</code>
     */
    public static final Public PUBLIC = new Public();

    /**
     * 認証情報
     */
    public final AuthInfos AUTH_INFOS = AuthInfos.AUTH_INFOS;

    /**
     * プロジェクトテーブル
     */
    public final BoundedContexts BOUNDED_CONTEXTS = BoundedContexts.BOUNDED_CONTEXTS;

    /**
     * ドメインモデルテーブル
     */
    public final DomainModels DOMAIN_MODELS = DomainModels.DOMAIN_MODELS;

    /**
     * ユーザーテーブル
     */
    public final Users USERS = Users.USERS;

    /**
     * No further instances allowed
     */
    private Public() {
        super("public", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            AuthInfos.AUTH_INFOS,
            BoundedContexts.BOUNDED_CONTEXTS,
            DomainModels.DOMAIN_MODELS,
            Users.USERS
        );
    }
}
